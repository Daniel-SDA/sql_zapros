-- продажи открытый период

insert into [ETL_1C_SQL].[dbo].[рн_Продажи]  ([БазаДанных], [Период], [Артикул],   [Номенклатура_ссылка], [НомерСтроки],
 [Документ_Ссылка],  [Контрагент_ссылка], [Ответственный_Ссылка], [Редактор_Ссылка],   [ЛП_Отгрузки_Ссылка], [ЛП_Отгрузки_Тип_Ссылка], 
 
 [ЛП_Получатель_Ссылка],   [ЛП_Получатель_Тип_Ссылка], [Регистратор_Номер], [Регистратор_Тип],
  [Тип_Отгрузки_Ссылка],   [Количество], [Стоимость], [СтоимостьБезСкидок], [СтоимостьВБазовыхММЦенах], [Дата_Актуальности]) 
 select distinct СборДанных.БазаДанных , СборДанных.Период , Номенклатура.Артикул as  Артикул ,
  СборДанных.Номенклатура_ссылка , СборДанных.НомерСтроки , СборДанных.Документ_Ссылка , СборДанных.Контрагент_ссылка ,
   СборДанных.Ответственный_Ссылка , СборДанных.Редактор_Ссылка , СборДанных.ЛП_Отгрузки_Ссылка , СборДанных.ЛП_Отгрузки_Тип_Ссылка ,
    СборДанных.ЛП_Получатель_Ссылка , СборДанных.ЛП_Получатель_Тип_Ссылка , СборДанных.Регистратор_Номер , СборДанных.Регистратор_Тип ,
	 СборДанных.Тип_Отгрузки_Ссылка , СборДанных.Количество ,
  case when СборДанных.Регистратор_Тип = 'РеализацияТоваровУслуг' and RegSal.Количество>0 then (RegSal.Стоимость/RegSal.Количество)*СборДанных.Количество 
	     when СборДанных.Регистратор_Тип = 'КомплектацияНоменклатуры' and DocLzk.Количество>0 then (DocLzk.СуммаСНДС/DocLzk.Количество)*СборДанных.Количество
	     when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and DocPer.Количество>0 then (DocPer.СуммаПеремещения/DocPer.Количество)*СборДанных.Количество
		 when СборДанных.Регистратор_Тип = 'ОтчетОРозничныхПродажах' and RoznSl.Количество>0 then (RoznSl.Сумма/RoznSl.Количество)*СборДанных.Количество 
		 when СборДанных.Регистратор_Тип = 'ЧекККМ' and CheKKM.Количество>0 then (CheKKM.Сумма/CheKKM.Количество)*СборДанных.Количество else 0 
		 end Стоимость , 
  case when СборДанных.Регистратор_Тип = 'РеализацияТоваровУслуг' and RegSal.Количество>0 then (RegSal.СтоимостьБезСкидок/RegSal.Количество)*СборДанных.Количество 
		  when СборДанных.Регистратор_Тип = 'КомплектацияНоменклатуры' and DocLzk.Количество>0 then (DocLzk.СуммаСНДС/DocLzk.Количество)*СборДанных.Количество 
		  when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and DocPer.Количество>0 then (DocPer.СуммаПеремещения/DocPer.Количество)*СборДанных.Количество 
		  when СборДанных.Регистратор_Тип = 'ОтчетОРозничныхПродажах' and RoznSl.Количество>0 then (RoznSl.СуммаБезСкидок/RoznSl.Количество)*СборДанных.Количество 
    	   when СборДанных.Регистратор_Тип = 'ЧекККМ' and CheKKM.Количество>0 then (CheKKM.СуммаБезСкидки/CheKKM.Количество)*СборДанных.Количество 
  end СтоимостьБезСкидок ,  
  case when СборДанных.Регистратор_Тип = 'РеализацияТоваровУслуг' and RegSal.Количество>0 then (RegSal.СтоимостьВБазовыхММЦенах/RegSal.Количество)*СборДанных.Количество 
		when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and DocPer.Количество>0 then (DocPer.СуммаПеремещения/DocPer.Количество)*СборДанных.Количество 
  end СтоимостьВБазовыхММЦенах ,
	    convert(smalldatetime, getdate()) as [Дата_Актуальности] 
		FROM ##СборДанных_ as СборДанных 
		left join ##RegSal_ as RegSal on СборДанных.Документ_Ссылка = RegSal.ДокументПродажи_Ссылка and СборДанных.Номенклатура_ссылка = RegSal.Номенклатура_Ссылка and СборДанных.[БазаДанных] = RegSal.[БазаДанных] 
		left join ##DocLzk_ as DocLzk on СборДанных.Документ_Ссылка = DocLzk.м_ЛЗК_Ссылка and СборДанных.Номенклатура_ссылка = DocLzk.Номенклатура_Ссылка and СборДанных.[БазаДанных] = DocLzk.[БазаДанных] 
		left join ##DocPer_ as DocPer on СборДанных.Документ_Ссылка = DocPer.Перемещение_Ссылка and СборДанных.Номенклатура_ссылка = DocPer.Номенклатура_Ссылка and СборДанных.[БазаДанных] = DocPer.[БазаДанных] 
		left join ##RoznSl_ as RoznSl on СборДанных.Документ_Ссылка = RoznSl.ОтчетОРозничныхПродажах_Ссылка and СборДанных.Номенклатура_ссылка = RoznSl.Номенклатура_Ссылка and СборДанных.[БазаДанных] = RoznSl.[БазаДанных] 
		left join ##CheKKM_ as CheKKM on СборДанных.Документ_Ссылка = CheKKM.ЧекККМ_Ссылка and СборДанных.Номенклатура_ссылка = CheKKM.Номенклатура_Ссылка and СборДанных.[БазаДанных] = CheKKM.[БазаДанных]
		left join etl_1c_sql.dbo.Table_Справочник_Номенклатура as Номенклатура  on СборДанных.Номенклатура_ссылка = Номенклатура.Ссылка_ID /*--справочник Номенклатура*/



--Продажи закрытый период



select [SQL_Text] from [dbo].[Table_Список_Запросов] where [id_reports]=1 and [id_Linked_Servers] =17 order by N

insert into [ETL_1C_SQL].[dbo].[рн_ПРОДАЖИ]
  ([БазаДанных], [Период], [Артикул], [Номенклатура_ссылка], 
  [НомерСтроки], [Документ_Ссылка],  [Контрагент_ссылка], [Ответственный_Ссылка], [Редактор_Ссылка],   
  [ЛП_Отгрузки_Ссылка], [ЛП_Отгрузки_Тип_Ссылка], [ЛП_Получатель_Ссылка],   [ЛП_Получатель_Тип_Ссылка], [Регистратор_Номер], 
  [Регистратор_Тип], [Тип_Отгрузки],   [Количество], [Стоимость], [СтоимостьБезСкидок], [СтоимостьВБазовыхММЦенах],
   [СебестоимостьСНДС], [Дата_Актуальности]) 
   select distinct СборДанных.БазаДанных , СборДанных.Период , Номенклатура.[Артикул] as  Артикул , СборДанных.Номенклатура_ссылка ,
    СборДанных.НомерСтроки , СборДанных.Документ_Ссылка , СборДанных.Контрагент_ссылка , СборДанных.Ответственный_Ссылка , СборДанных.Редактор_Ссылка ,
	 СборДанных.ЛП_Отгрузки_Ссылка , СборДанных.ЛП_Отгрузки_Тип_Ссылка , СборДанных.ЛП_Получатель_Ссылка , СборДанных.ЛП_Получатель_Тип_Ссылка , 
	 СборДанных.Регистратор_Номер , СборДанных.[Регистратор_Тип] , СборДанных.Тип_Отгрузки , СборДанных.Количество ,  
	 case when СборДанных.Регистратор_Тип in ('РеализацияТоваровУслуг', 'ОтчетОРозничныхПродажах', 'ЧекККМ', 'ВозвратТоваровОтПокупателя')  and ISNULL(RegSal.Количество,0)<>0 then (RegSal.Стоимость/RegSal.Количество) *  СборДанных.Количество   
		when СборДанных.Регистратор_Тип = 'КомплектацияНоменклатуры' and ISNULL(DocLzk.Количество,0)<>0 then (DocLzk.СуммаСНДС/DocLzk.Количество) * СборДанных.Количество  
	   when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and ISNULL(DocPer.Количество,0)<>0 then (DocPer.СуммаПеремещения/DocPer.Количество) * СборДанных.Количество  
    else 0  end as Стоимость  , 
	 case when СборДанных.Регистратор_Тип in ('РеализацияТоваровУслуг', 'ОтчетОРозничныхПродажах', 'ЧекККМ', 'ВозвратТоваровОтПокупателя') and ISNULL(RegSal.Количество,0)<>0 then (RegSal.СтоимостьБезСкидок/RegSal.Количество) * СборДанных.Количество 
	    when СборДанных.Регистратор_Тип = 'КомплектацияНоменклатуры' and ISNULL(DocLzk.Количество,0)<>0 then (DocLzk.СуммаСНДС/DocLzk.Количество)*СборДанных.Количество 
		 when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and ISNULL(DocPer.Количество,0)<>0 then (DocPer.СуммаПеремещения/DocPer.Количество)*СборДанных.Количество 
    end 	 as СтоимостьБезСкидок , 
	 
    case when СборДанных.Регистратор_Тип = 'РеализацияТоваровУслуг' and ISNULL(RegSal.Количество,0)<>0 then (RegSal.СтоимостьВБазовыхММЦенах/RegSal.Количество)*СборДанных.Количество 
		    when СборДанных.Регистратор_Тип = 'ПеремещениеТоваров' and ISNULL(DocPer.Количество,0)<>0 then (DocPer.СуммаПеремещения/DocPer.Количество)*СборДанных.Количество  
	end as СтоимостьВБазовыхММЦенах ,
	СборДанных.СебестоимостьСНДС , 
	 convert(smalldatetime, getdate()) as [Дата_Актуальности]  
	  		 FROM ##СборДанных as СборДанных  left join ##RegSal as RegSal on СборДанных.Документ_Ссылка = RegSal.ДокументПродажи_Ссылка and СборДанных.Номенклатура_ссылка = RegSal.Номенклатура_Ссылка and СборДанных.[БазаДанных] = RegSal.[БазаДанных] and СборДанных.Регистратор_Тип = RegSal.ТипДокумента
			   left join ##DocLzk as DocLzk on СборДанных.Документ_Ссылка = DocLzk.м_ЛЗК_Ссылка and СборДанных.Номенклатура_ссылка = DocLzk.Номенклатура_Ссылка and СборДанных.[БазаДанных] = DocLzk.[БазаДанных] 
			    left join ##DocPer as DocPer on СборДанных.Документ_Ссылка = DocPer.Перемещение_Ссылка and СборДанных.Номенклатура_ссылка = DocPer.Номенклатура_Ссылка and СборДанных.[БазаДанных] = DocPer.[БазаДанных] 
				 left join [ETL_1C_SQL].dbo.[Table_Справочник_Номенклатура] as Номенклатура  on СборДанных.Номенклатура_ссылка = Номенклатура.[Ссылка_ID] /*--справочник Номенклатура*/




select distinct tss.id_servers,tss.name_city_magazin, sales.БазаДанных from  [dbo].[Table_Список_Связанных_Серверов] tss
left join (select distinct БазаДанных from [dbo].[рн_Продажи]  where convert(date,Период) = '2021-06-23') sales 
on tss.id_servers=sales.БазаДанных
where (sales.БазаДанных is null )


select   [Регистратор_Тип], tpodr.Наименование, sum( [Количество]), sum([Стоимость]), sum([СтоимостьБезСкидок]),sum([СтоимостьВБазовыхММЦенах]), tpodr.м_Идентификатор,
   sum([СебестоимостьСНДС]), [ЛП_Отгрузки_Ссылка] 
   from [ETL_1C_SQL].[dbo].[рн_ПРОДАЖИ] sales
   
   
    left join ( select q.* 
							from (
							select podr.*  FROM [ETL_1C_SQL].[dbo].[Table_Справочник_Подразделения]  podr  
							where podr.[м_ЛогистическоеПодразделение]=0x01 and podr.[ПометкаУдаления]=0x00)  AS Q 
							
							LEFT OUTER JOIN  [DATA_ANALYSIS].dbo.TABLE_Dim_Предприятие AS W
	
	 ON        q.ЛП_Отгрузки_Ссылка = W.Предприятие_Склад_Ссылка_ID AND Q.БазаДанных = W.БазаДанных /* LEFT OUTER JOIN
                         dbo.TABLE_Dim_Предприятие AS W2 ON Q.ЛП_Получатель_Ссылка = W2.Предприятие_Склад_Ссылка_ID AND Q.БазаДанных = W2.БазаДанных AND 
                         W2.Предприятие_Склад_Ссылка_ID <> 0x00000000000000000000000000000000*/
/* and podr.БазаДанных =43 */) tpodr
   on tPodr.Ссылка_ID=sales.ЛП_Отгрузки_Ссылка

 where /* tpodr.м_Идентификатор='л252' and*/ convert(date,Период) > '2021-07-01' 
    group by  [Регистратор_Тип], tpodr.Наименование,[ЛП_Отгрузки_Ссылка],  tpodr.м_Идентификатор


